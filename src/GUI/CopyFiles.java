/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import JRD.*;
import files.JCFile;
import files.JDFile;
import java.io.File;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.nio.file.Paths;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Fran
 */
public class CopyFiles extends javax.swing.JFrame {
    private List<Player> players;
    private Storage str;
    private Player lastPlayer;
    public static final File PARENTDIRECTORY = new File ("JRD");
    /**
     * Creates new form CopyFilesTest
     */
    public CopyFiles() {
        initComponents();
        setLocationRelativeTo(null);
        // <editor-fold defaultstate="collapsed" desc="ME FALTAN DATOS"> 
        //me falta a√±adir los datos necesario
        
        
        // Create 
        initComponents2(PARENTDIRECTORY);
        
        // </editor-fold>  
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jProgressBar1 = new javax.swing.JProgressBar();
        jPanel1 = new javax.swing.JPanel();
        Player1Button = new javax.swing.JButton();
        Player2Button = new javax.swing.JButton();
        LabelPlayer2 = new javax.swing.JLabel();
        LabelPlayer1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        LabelLastPlayer = new javax.swing.JLabel();
        LabelLastModification = new javax.swing.JLabel();
        TextLastPlayer = new javax.swing.JLabel();
        TextLastModification = new javax.swing.JLabel();
        ComboBox = new javax.swing.JComboBox();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jProgressBar1.setBackground(new java.awt.Color(255, 0, 0));
        jProgressBar1.setForeground(new java.awt.Color(0, 153, 0));
        jProgressBar1.setMinimum(1);

        Player1Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Player1ButtonActionPerformed(evt);
            }
        });

        Player2Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Player2ButtonActionPerformed(evt);
            }
        });

        LabelPlayer2.setText("Cargar partidas de");

        LabelPlayer1.setText("Carga partidas de");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LabelPlayer2)
                    .addComponent(LabelPlayer1))
                .addGap(109, 109, 109)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Player2Button, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                    .addComponent(Player1Button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(LabelPlayer1)
                    .addComponent(Player1Button, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Player2Button, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(LabelPlayer2)))
                .addContainerGap(42, Short.MAX_VALUE))
        );

        LabelLastPlayer.setText("Ultimo jugador");

        LabelLastModification.setText("Ultima modificacion");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LabelLastPlayer)
                    .addComponent(LabelLastModification))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(TextLastModification, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                    .addComponent(TextLastPlayer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(LabelLastPlayer)
                    .addComponent(TextLastPlayer, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(LabelLastModification)
                    .addComponent(TextLastModification, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ComboBox.setModel(new javax.swing.DefaultComboBoxModel());
        ComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBoxActionPerformed(evt);
            }
        });

        jMenu1.setText("File");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_SPACE, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Create JRD");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem3.setText("Delete JRD");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Refresh");
        jMenu2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu2ActionPerformed(evt);
            }
        });

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F5, 0));
        jMenuItem2.setText("Refresh GUI");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(178, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void initComponents2(File directory) {
        try {
            // Parent directory
            String files[] = directory.list();
            if (files == null) System.exit(0);
            // Combo box
            for (String f : files) {
                ComboBox.addItem(f);
            }
        } catch (Exception ex) {
            Logger.getLogger(CopyFiles.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void Player1ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Player1ButtonActionPerformed
        
            //checks for the console
            System.out.println("         ****Pressed the FRAN Button");
            
            // Last Player
            lastPlayer = lastPlayer(players);
            
            // 1. 2. and 3.
            File f = str.getPath().toFile();
            if(f.list().length>0) {
                // 1. delete the file from the LAST PLAYER's folder
                JDFile.deleteDirectoryPath(lastPlayer.getPath());
                
                // 2. copie the files from the STORAGE to the LAST PLAYER's folder
                JCFile.copyPaths(str.getPath(), lastPlayer.getPath());
                
                // 3. delete the files of STORAGE
                JDFile.deleteDirectoryPath(str.getPath());
            }
            else JOptionPane.showMessageDialog(null, "No hay nada en la carpeta storage.",
                    "JRD Warning", JOptionPane.WARNING_MESSAGE);
                
            // 4. copie the files from the SELECTED PLAYER to STORAGE
            JCFile.copyPaths(players.get(0).getPath(), str.getPath());
            
            // 5. change the JRD
            players.get(0).setCurrentTime();
            CreateJRD.writeJRD(players, str, Paths.get("JRD//Default.jrd"));
            
            // 6. Change the GUI labels
            TextLastPlayer.setText(players.get(0).getName());
            TextLastModification.setText(TokenKind.DT.format(players.get(0).getDate()));
        
    }//GEN-LAST:event_Player1ButtonActionPerformed

    private void Player2ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Player2ButtonActionPerformed
        //checks for the console
        System.out.println("         ****Pressed the JANDRO Button");
        
        // Last Player
        lastPlayer = lastPlayer(players);
        
         // 1. 2. and 3.
            File f = str.getPath().toFile();
            if(f.list().length>0) {
                // 1. delete the file from the LAST PLAYER's folder
                JDFile.deleteDirectoryPath(lastPlayer.getPath());
                
                // 2. copie the files from the STORAGE to the LAST PLAYER's folder
                JCFile.copyPaths(str.getPath(), lastPlayer.getPath());
                
                // 3. delete the files of STORAGE
                JDFile.deleteDirectoryPath(str.getPath());
            }
            else JOptionPane.showMessageDialog(null, "No hay nada en la carpeta storage.",
                    "JRD Warning", JOptionPane.WARNING_MESSAGE);
        
        // 4. copie the files from the SELECTED PLAYER to STORAGE
        JCFile.copyPaths(players.get(1).getPath(), str.getPath());
        
        // 5. change the JRD
        players.get(1).setCurrentTime();
        CreateJRD.writeJRD(players, str, Paths.get("JRD//Default.jrd"));
        
        // 6. Change the GUI labels
        TextLastPlayer.setText(players.get(1).getName()); 
        TextLastModification.setText(TokenKind.DT.format(players.get(1).getDate()));
    }//GEN-LAST:event_Player2ButtonActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // Open new JFrame
        CreateGUI chd = new CreateGUI();
        chd.setVisible(true);
        
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void ComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBoxActionPerformed
        // Selected new item
        try {
            // Parent directory
            if (PARENTDIRECTORY == null) JOptionPane.showMessageDialog(null, 
                    "El JRD esta incompleto","JRD Warning", JOptionPane.WARNING_MESSAGE);
            
            // File selected
            File f = new File(PARENTDIRECTORY+"//"+ComboBox.getSelectedItem());
            if (!f.exists()) return;

            
            // Reading first file
            String texto = TokenJRD.readFile(PARENTDIRECTORY+"//"+ComboBox.getSelectedItem(), 
                    StandardCharsets.ISO_8859_1);
            System.out.println(texto);
            List<TokenContainer> tokens = TokenJRD.tokens(texto);
            players = Player.createPlayers(tokens);
            str = new Storage(tokens);
            // LastPlayer
            lastPlayer = lastPlayer(players);
            // Buttons
            Player1Button.setText(players.get(0).getName());
            Player2Button.setText(players.get(1).getName());
            
            // Labels
            LabelPlayer1.setText("Cargar partidas de "+players.get(0).getName());
            LabelPlayer2.setText("Cargar partidas de "+players.get(1).getName());
            
            TextLastPlayer.setText(lastPlayer.getName()); 
            TextLastModification.setText(TokenKind.DT.format(lastPlayer.getDate()));
            
        } catch (IOException ex) {
            Logger.getLogger(CopyFiles.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(CopyFiles.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ComboBoxActionPerformed

    private void jMenu2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu2ActionPerformed

    }//GEN-LAST:event_jMenu2ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // Dir files list
        String files[] = PARENTDIRECTORY.list();
        // Set combo box items
        ComboBox.removeAllItems();
        for (String f : files) 
            ComboBox.addItem(f);
        
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // JOptionPane to select the file to delete
        String files[] = PARENTDIRECTORY.list();
        int id = JOptionPane.showOptionDialog(null, "Select the file to delete.", "Select",
                JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE, null, files, files[0]);
        
        // Delete the file selected
        JDFile.deleteFile(new File(PARENTDIRECTORY.toString()+"\\"+files[id]));
    }//GEN-LAST:event_jMenuItem3ActionPerformed
    
    public static void sleep (int i) throws InterruptedException{
            System.out.println("       ****Waiting");
            Thread.sleep(1000*i);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            javax.swing.UIManager.setLookAndFeel("com.jtattoo.plaf.hifi.HiFiLookAndFeel");
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CopyFiles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CopyFiles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CopyFiles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CopyFiles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CopyFiles().setVisible(true);
                
            }
        });
        
        //set the labels
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox ComboBox;
    private javax.swing.JLabel LabelLastModification;
    private javax.swing.JLabel LabelLastPlayer;
    private javax.swing.JLabel LabelPlayer1;
    private javax.swing.JLabel LabelPlayer2;
    private javax.swing.JButton Player1Button;
    private javax.swing.JButton Player2Button;
    private javax.swing.JLabel TextLastModification;
    private javax.swing.JLabel TextLastPlayer;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JProgressBar jProgressBar1;
    // End of variables declaration//GEN-END:variables
    
    public Player lastPlayer (List<Player> players) {
        Player lastPlayer = players.get(0);
        for(int i=1; i<players.size();i++) {
            if(players.get(i).getDate().after(lastPlayer.getDate()))
                lastPlayer = players.get(i);
        }
        
        return lastPlayer;
    }

}
