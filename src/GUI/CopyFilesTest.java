/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import files.JCFile;
import files.JDFile;
import java.io.File;
import java.io.IOException;
import javax.swing.JOptionPane;

/**
 *
 * @author Fran
 */
public class CopyFilesTest extends javax.swing.JFrame {
    Player lastPlayer;
    Player selectedPlayer;
    Player fran;
    Player jandro;
    File storage;
    File JRD;

    /**
     * Creates new form CopyFilesTest
     */
    public CopyFilesTest() {
        initComponents();
        setLocationRelativeTo(null);
        // <editor-fold defaultstate="collapsed" desc="ME FALTAN DATOS"> 
        //me falta a√±adir los datos necesarios
        fran = new Player("Fran",new File("H:\\Archivos de programa\\Star Wars Knight Old Republic\\Fran Save"));
        jandro = new Player("Jandro",new File("H:\\Archivos de programa\\Star Wars Knight Old Republic\\Jandro Save"));
        storage = new File("H:\\Archivos de programa\\Star Wars Knight Old Republic\\saves");
        JRD = new File("H:\\Archivos de programa\\Star Wars Knight Old Republic\\Player.jrd");
        
        String data [] = txtPlayer.getData(JRD);
        jLabel5.setText(data[0]);
        modificacionLabel.setText(data[1]);
        if(fran.name.equals(data[0])){
            lastPlayer = fran;
            System.out.println("Last player :"+lastPlayer);
        }
        if(jandro.name.equals(data[0])){
            lastPlayer = jandro;
            System.out.println("Last player :"+lastPlayer);
        }
        
        // </editor-fold>  
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jProgressBar1 = new javax.swing.JProgressBar();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        FRANButton = new javax.swing.JButton();
        JANDROButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        modificacionLabel = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jProgressBar1.setBackground(new java.awt.Color(255, 0, 0));
        jProgressBar1.setForeground(new java.awt.Color(0, 153, 0));
        jProgressBar1.setMinimum(1);

        jLabel1.setText("Carga partidas de FRAN");

        jLabel2.setText("Cargar partidas de JANDRO");

        jLabel3.setText("Ultimo jugador");

        jLabel4.setText("Ultima modificacion");

        FRANButton.setText("FRAN");
        FRANButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FRANButtonActionPerformed(evt);
            }
        });

        JANDROButton.setText("JANDRO");
        JANDROButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JANDROButtonActionPerformed(evt);
            }
        });

        jMenu1.setText("File");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_SPACE, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Change Directories");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 129, Short.MAX_VALUE)
                                .addComponent(FRANButton))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel5)
                                    .addComponent(JANDROButton)
                                    .addComponent(modificacionLabel))))
                        .addGap(80, 80, 80))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(FRANButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(JANDROButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(modificacionLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 81, Short.MAX_VALUE)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void FRANButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FRANButtonActionPerformed
        //selected Player equals fran
        selectedPlayer = fran;
        
        //checks for the console
        System.out.println("         ****Pressed the FRAN Button");
        
        // 1. delete the file from the LAST PLAYER's folder
        JDFile.deleteDirectoryFiles(lastPlayer.playerFold);
        
        // 2. copie the files from the STORAGE to the LAST PLAYER's folder
        JCFile.copyDirectories(storage, lastPlayer.playerFold);
        
        // 3. delete the files of STORAGE
        JDFile.deleteDirectoryFiles(storage);
        
        // 4. copie the files from the SELECTED PLAYER to STORAGE
        JCFile.copyDirectories(selectedPlayer.playerFold, storage);
        
        // 5. change the Player.jrd
        txtPlayer.refreshTxt(selectedPlayer, JRD);
        
        // 6. execute the game
        System.out.println("->Executing the game....");
        JOptionPane.showMessageDialog(null, "Lo siento pero el juego se debe ejecutar manualmente.");
        try{
        java.awt.Desktop.getDesktop().open(new File("H:\\Archivos de programa\\Star Wars Knight Old Republic"));
        }catch(IOException io){
            io.printStackTrace();
        }
        // 7. close the java program
        System.exit(0);
    }//GEN-LAST:event_FRANButtonActionPerformed

    private void JANDROButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JANDROButtonActionPerformed
        //selected Player equals fran
        selectedPlayer = jandro;
        
        //checks for the console
        System.out.println("         ****Pressed the JANDRO Button");
        
        // 1. delete the file from the LAST PLAYER's folder
        JDFile.deleteDirectoryFiles(lastPlayer.playerFold);
        
        // 2. copie the files from the STORAGE to the LAST PLAYER's folder
        JCFile.copyDirectories(storage, lastPlayer.playerFold);
        
        // 3. delete the files of STORAGE
        JDFile.deleteDirectoryFiles(storage);
        
        // 4. copie the files from the SELECTED PLAYER to STORAGE
        JCFile.copyDirectories(selectedPlayer.playerFold, storage);
        
        // 5. change the Player.jrd
        txtPlayer.refreshTxt(selectedPlayer, JRD);
        
        // 6. execute the game
        System.out.println("->Executing the game....");
        JOptionPane.showMessageDialog(null, "Lo siento pero el juego se debe ejecutar manualmente.");
        try{
        java.awt.Desktop.getDesktop().open(new File("H:\\Archivos de programa\\Star Wars Knight Old Republic"));
        }catch(IOException io){
            io.printStackTrace();
        }
        
        // 7. close the java program
        System.exit(0);
    }//GEN-LAST:event_JANDROButtonActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // Open new JFrame

    }//GEN-LAST:event_jMenuItem1ActionPerformed
    
    public static void sleep (int i) throws InterruptedException{
            System.out.println("       ****Waiting");
            Thread.sleep(1000*i);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }                
            }
            javax.swing.UIManager.setLookAndFeel("com.jtattoo.plaf.hifi.HiFiLookAndFeel");
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CopyFilesTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CopyFilesTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CopyFilesTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CopyFilesTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CopyFilesTest().setVisible(true);
                
            }
        });
        
        //set the labels
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton FRANButton;
    private javax.swing.JButton JANDROButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JLabel modificacionLabel;
    // End of variables declaration//GEN-END:variables
}
